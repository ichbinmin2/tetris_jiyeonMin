{"version":3,"sources":["components/display/display.module.css","components/tetris/tetris.module.css","components/haeder/header.module.css","components/startButton/startButton.module.css","components/playBoard/playBoard.module.css","components/haeder/header.jsx","components/display/display.jsx","components/styles/StyledMicroBox.js","components/microBox/microBox.jsx","components/playBoard/playBoard.jsx","components/startButton/startButton.jsx","playingGame.js","block.js","components/hooks/usePlayBoard.js","components/tetris/tetris.jsx","components/hooks/usePlayer.js","components/hooks/usePlayGame.js","components/hooks/useResize.js","components/hooks/useInterval.js","app.jsx","index.js"],"names":["module","exports","Header","className","styles","title","span","Display","gameOver","text","display","displayBox","gameOverBox","StyledMicroBox","styled","div","props","type","color","MicroBox","React","memo","PlayBoard","playBoard","map","row","micro","x","StartButton","callback","btnBox","btn","onClick","playingBoard","Array","from","fill","checkBumped","player","moveX","moveY","y","blockType","length","position","BLOCKS","0","shape","block","1","2","3","4","5","randomColorfulBlock","colorfulBlock","randomColorful","Math","floor","random","usePlayBoard","resetPlayer","useState","setPlayBoard","attack","setAttack","useEffect","boardUpdateStep","beforeBoard","newBoard","forEach","value","bumped","reduce","total","findIndex","preview","unshift","push","attackBomb","Tetris","fallTime","setFallTime","setGameOver","setPlayer","useCallback","BOARD_WIDTH","usePlayer","playerUpdatePostion","score","setScore","level","setLevel","attackBlock","setAttackBlock","scorePoint","scoreResult","usePlayGame","myRef","useRef","WIDTH","getDimensions","current","offsetWidth","dimensions","setDimensions","handleResize","window","addEventListener","removeEventListener","useResize","handlerMovePlayer","dir","onFallingBlock","onKeyboardMove","keyCode","delay","savedCallback","id","setInterval","clearInterval","useInterval","warp","role","tabIndex","onKeyDown","event","onKeyUp","onMouseMove","mousePointer","clientX","ref","container","boxContainer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wFACAA,EAAOC,QAAU,CAAC,UAAY,UAAU,SAAW,UAAU,WAAa,QAAQ,WAAa,QAAQ,WAAa,4BAA4B,YAAc,6BAA6B,KAAO,sBAAsB,SAAW,0BAA0B,MAAQ,yB,gBCArQD,EAAOC,QAAU,CAAC,YAAc,UAAU,WAAa,QAAQ,KAAO,qBAAqB,UAAY,0BAA0B,aAAe,6BAA6B,WAAa,6B,iBCA1LD,EAAOC,QAAU,CAAC,WAAa,QAAQ,MAAQ,sBAAsB,KAAO,qBAAqB,IAAM,oBAAoB,KAAO,uB,kBCAlID,EAAOC,QAAU,CAAC,UAAY,UAAU,WAAa,QAAQ,WAAa,QAAQ,OAAS,4BAA4B,IAAM,2B,mBCA7HD,EAAOC,QAAU,CAAC,UAAY,+B,6MCSfC,EAPA,kBACb,sBAAKC,UAAWC,IAAOC,MAAvB,UACE,sBAAMF,UAAWC,IAAOE,KAAxB,qBACA,sBAAMH,UAAWC,IAAOE,KAAxB,uB,gBCaWC,EAhBC,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,SAAUC,EAAW,EAAXA,KAC3B,OACE,qBAAKN,UAAWC,IAAOM,QAAvB,SACGF,EACC,qBAAKL,UAAS,UAAKC,IAAOO,WAAZ,YAA0BP,IAAOQ,aAA/C,SACE,sBAAMT,UAAS,UAAKC,IAAOE,KAAZ,YAAoBF,IAAOI,UAA1C,SAAuDC,MAGzD,qBAAKN,UAAWC,IAAOO,WAAvB,SACE,sBAAMR,UAAWC,IAAOE,KAAxB,SAA+BG,S,2UCVlC,IAAMI,E,MAAiBC,EAAOC,IAAV,KAGL,SAACC,GAAD,OACH,IAAfA,EAAMC,KAAa,OAAnB,eAAoCD,EAAME,MAA1C,QACQ,SAACF,GAAD,OAA2B,IAAfA,EAAMC,KAAa,YAAc,eAC3B,SAACD,GAAD,OAAWA,EAAME,SAClB,SAACF,GAAD,OAAWA,EAAME,SACnB,SAACF,GAAD,OAAWA,EAAME,SAChB,SAACF,GAAD,OAAWA,EAAME,SCRvCC,EAAW,SAAC,GAAqB,IAAnBF,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACxB,OAAO,cAACL,EAAD,CAAgBI,KAAMA,EAAMC,MAAOA,KAG7BE,MAAMC,KAAKF,GCSXG,EAZG,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,UAAWL,EAAY,EAAZA,MAC9B,OACE,qBAAKf,UAAWC,IAAOmB,UAAvB,SACGA,EAAUC,KAAI,SAACC,GAAD,OACbA,EAAID,KAAI,SAACE,EAAOC,GAAR,OACN,cAAC,EAAD,CAAkBV,KAAMS,EAAM,GAAIR,MAAOA,GAA1BS,Y,gBCIVC,EAVK,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACrB,OACE,yBAAS1B,UAAWC,IAAO0B,OAA3B,SACE,wBAAQ3B,UAAWC,IAAO2B,IAAKC,QAASH,EAAxC,4BCHOI,EAAe,kBAC1BC,MAAMC,KAAKD,MAHe,KAGM,kBAC9B,IAAIA,MALmB,IAKAE,KAAK,CAAC,EAAG,YAGvBC,EAAc,SAACC,EAAQf,EAAT,GACzB,IADyE,IAAvBgB,EAAsB,EAAzBZ,EAAaa,EAAY,EAAfC,EAChDA,EAAI,EAAGA,EAAIH,EAAOI,UAAUC,OAAQF,GAAK,EAChD,IAAK,IAAId,EAAI,EAAGA,EAAIW,EAAOI,UAAUD,GAAGE,OAAQhB,GAAK,EACnD,GAA+B,IAA3BW,EAAOI,UAAUD,GAAGd,MAEnBJ,EAAUkB,EAAIH,EAAOM,SAASH,EAAID,KAClCjB,EAAUkB,EAAIH,EAAOM,SAASH,EAAID,GACjCb,EAAIW,EAAOM,SAASjB,EAAIY,IAIjB,QAFThB,EAAUkB,EAAIH,EAAOM,SAASH,EAAID,GAChCb,EAAIW,EAAOM,SAASjB,EAAIY,GACxB,IAEF,OAAO,G,YCrBJM,EAAS,CACpBC,EAAG,CAAEC,MAAO,CAAC,CAAC,IAAK7B,MAAO,WAC1B8B,MAAO,CACLD,MAAO,CACL,CAAC,IAAK,KACN,CAAC,IAAK,MAER7B,MAAO,CACL4B,EAAG,cACHG,EAAG,YACHC,EAAG,aACHC,EAAG,aACHC,EAAG,YACHC,EAAG,gBAKIC,EAAsB,WACjC,IAAMC,EAAgB,SAChBC,EACJD,EAAcE,KAAKC,MAAMD,KAAKE,SAAWJ,EAAcZ,SACzD,OAAOE,EAAOG,MAAM9B,MAAMsC,ICnBfI,EAAe,SAACtB,EAAQuB,GAAiB,IAAD,EACjBC,mBAAS7B,KADQ,mBAC5CV,EAD4C,KACjCwC,EADiC,OAEvBD,mBAAS,GAFc,mBAE5CE,EAF4C,KAEpCC,EAFoC,KAkDnD,OA9CAC,qBAAU,WACRD,EAAU,GAEV,IAWME,EAAkB,SAACC,GACvB,IAAMC,EAAWD,EAAY5C,KAAI,SAACC,GAAD,OAC/BA,EAAID,KAAI,SAACE,GAAD,MAAyB,QAAbA,EAAM,GAAe,CAAC,EAAG,OAASA,QAcxD,OAXAY,EAAOI,UAAU4B,SAAQ,SAAC7C,EAAKgB,GAC7BhB,EAAI6C,SAAQ,SAACC,EAAO5C,GACJ,IAAV4C,IACFF,EAAS5B,EAAIH,EAAOM,SAASH,GAAGd,EAAIW,EAAOM,SAASjB,GAAK,CACvD4C,EADuD,UAEpDjC,EAAOkC,OAAS,QAAU,eAMjClC,EAAOkC,QACTX,IA5Be,SAACQ,GAAD,OACjBA,EAASI,QAAO,SAACC,EAAOjD,GACtB,OAAkD,IAA9CA,EAAIkD,WAAU,SAACjD,GAAD,OAAwB,IAAbA,EAAM,OACjCuC,GAAU,SAACW,GAAD,OAAaA,EAAU,KACjCF,EAAMG,QAAQ,IAAI3C,MAAMmC,EAAS,GAAG1B,QAAQP,KAAK,CAAC,EAAG,SAC9CsC,IAETA,EAAMI,KAAKrD,GACJiD,KACN,IAoBMK,CAAWV,IAEbA,GAGTN,GAAa,SAACa,GAAD,OAAaT,EAAgBS,QACzC,CACDtC,EAAOkC,OACPlC,EAAOM,SAASH,EAChBH,EAAOM,SAASjB,EAChBW,EAAOI,UACPmB,IAGK,CAACtC,EAAWwC,EAAcC,ICuFpBgB,EA9HA,WAAO,IAAD,EACalB,mBAAS,MADtB,mBACZmB,EADY,KACFC,EADE,OAEapB,oBAAS,GAFtB,mBAEZtD,EAFY,KAEF2E,EAFE,OCVI,WAAO,IAAD,EACDrB,mBAAS,CACnClB,SAAU,CAAEjB,EAAG,EAAGc,EAAG,GACrBC,UAAWG,EAAO,GAAGE,MACrB7B,MAAOoC,IACPkB,QAAQ,IALmB,mBACtBlC,EADsB,KACd8C,EADc,KA4B7B,MAAO,CAAC9C,EApBoB,SAAC,GAAsB,IAApBX,EAAmB,EAAnBA,EAAGc,EAAgB,EAAhBA,EAAG+B,EAAa,EAAbA,OACnCY,GAAU,SAACR,GAAD,mBAAC,eACNA,GADK,IAERhC,SAAU,CACRjB,EAAIiD,EAAQhC,SAASjB,EAAIiD,EAAQhC,SAASjB,EAAIA,EAC9Cc,EAAImC,EAAQhC,SAASH,EAAImC,EAAQhC,SAASH,EAAIA,GAEhD+B,eAIgBa,uBAAY,WAC9BD,EAAU,CACRxC,SAAU,CAAEjB,EAAG2D,EAAqB7C,EAAG,GACvCC,UAAWG,EAAOG,MAAMD,MACxB7B,MAAOoC,IACPkB,QAAQ,MAET,KDbgDe,GAHhC,mBAGZjD,EAHY,KAGJkD,EAHI,KAGiB3B,EAHjB,OAIuBD,EAAatB,EAAQuB,GAJ5C,mBAIZtC,EAJY,KAIDwC,EAJC,OEZM,SAACC,GAAY,IAAD,EACXF,mBAAS,GADE,mBAC9B2B,EAD8B,KACvBC,EADuB,OAEX5B,mBAAS,GAFE,mBAE9B6B,EAF8B,KAEvBC,EAFuB,OAGC9B,mBAAS,GAHV,mBAG9B+B,EAH8B,KAGjBC,EAHiB,KAK/BC,EAAa,CAAC,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAElDC,EAAcX,uBAAY,WAC1BrB,EAAS,IACX0B,GAAS,SAACd,GAAD,OAAaA,EAAUmB,EAAW/B,EAAS,IAAM2B,EAAQ,MAClEG,GAAe,SAAClB,GAAD,OAAaA,EAAUZ,QAEvC,CAAC2B,EAAOI,EAAY/B,IAMvB,OAJAE,qBAAU,WACR8B,MACC,CAACA,EAAahC,EAAQyB,IAElB,CAACA,EAAOC,EAAUG,EAAaC,EAAgBH,EAAOC,GFMzDK,CAZe,yBAMjBR,EANiB,KAOjBC,EAPiB,KAQjBG,EARiB,KASjBC,EATiB,KAUjBH,EAViB,KAWjBC,EAXiB,KAabM,EAAQC,mBACNC,EG1Be,SAACF,GACxB,IAAMG,EAAgB,iBAAO,CAC3BD,MAAOF,EAAMI,QAAQC,cAFW,EAKEzC,mBAAS,CAAEsC,MAAO,IALpB,mBAK3BI,EAL2B,KAKfC,EALe,KAsBlC,OAhBAvC,qBAAU,WACR,IAAMwC,EAAe,WACnBD,EAAcJ,MAShB,OANIH,EAAMI,SACRG,EAAcJ,KAGhBM,OAAOC,iBAAiB,SAAUF,GAE3B,WACLC,OAAOE,oBAAoB,SAAUH,MAEtC,CAACR,IAEGM,EHIWM,CAAUZ,GAApBE,MAEFW,EAAoB,SAACC,GACpB3E,EAAYC,EAAQf,EAAW,CAAEI,EAAGqF,EAAKvE,EAAG,KAC/C+C,EAAoB,CAAE7D,EAAGqF,EAAKvE,EAAG,KAc/BwE,EAAiB,WACjBpB,EAA4B,IAAbF,EAAQ,KACzBC,GAAS,SAAChB,GAAD,OAAaA,EAAU,KAChCM,EAAY,KAAQS,EAAQ,GAAK,MAG9BtD,EAAYC,EAAQf,EAAW,CAAEI,EAAG,EAAGc,EAAG,KAGzCH,EAAOM,SAASH,EAAI,IACtB0C,GAAY,GACZD,EAAY,OAEdM,EAAoB,CAAE7D,EAAG,EAAGc,EAAG,EAAG+B,QAAQ,KAN1CgB,EAAoB,CAAE7D,EAAG,EAAGc,EAAG,EAAG+B,QAAQ,KAuBxC0C,EAAiB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACnB3G,IACa,KAAZ2G,EACFJ,GAAmB,GACE,KAAZI,EACTJ,EAAkB,GACG,KAAZI,IAVbjC,EAAY,MACZ+B,OAgCF,OIrGK,SAAqBpF,EAAUuF,GACpC,IAAMC,EAAgBlB,mBAEtBjC,qBAAU,WACRmD,EAAcf,QAAUzE,IACvB,CAACA,IAEJqC,qBAAU,WAIR,GAAc,OAAVkD,EAAgB,CAClB,IAAME,EAAKC,aAJb,WACEF,EAAcf,YAGec,GAC7B,OAAO,WACLI,cAAcF,OAGjB,CAACF,IJgFJK,EAAY,WACVR,MACChC,GAGD,yBACE9E,UAAWC,IAAOsH,KAClBC,KAAK,SACLC,SAAS,IACTC,UAAW,SAACC,GAAD,OAAWZ,EAAeY,IACrCC,QAhDY,SAAC,GAAiB,IAAfZ,EAAc,EAAdA,QACZ3G,GACa,KAAZ2G,GACFjC,EAAY,MA8Cd8C,YAAa,SAACF,GAAD,OAxBG,SAACA,GACnB,IAAMG,EAAeH,EAAMI,QAGtB1H,GAEDuG,EADEkB,EAHe7B,EAAQ6B,GAIN,EAED,GAgBID,CAAYF,IACpCK,IAAKjC,EAPP,SASE,sBAAK/F,UAAWC,IAAOgI,UAAvB,UACE,cAAC,EAAD,IACA,sBAAKjI,UAAWC,IAAOiI,aAAvB,UACE,cAAC,EAAD,CAAW9G,UAAWA,EAAWL,MAAOoB,EAAOpB,QAE/C,sBAAKf,UAAWC,IAAOO,WAAvB,UACGH,EACC,qBAAKL,UAAWC,IAAOM,QAAvB,SACE,cAAC,EAAD,CAASF,SAAUA,EAAUC,KAAK,gBAGpC,sBAAKN,UAAWC,IAAOM,QAAvB,UACE,cAAC,EAAD,CAASD,KAAI,kBAAagF,KAC1B,cAAC,EAAD,CAAShF,KAAI,mBAAcoF,KAC3B,cAAC,EAAD,CAASpF,KAAI,kBAAakF,QAG9B,cAAC,EAAD,CAAa9D,SAhGH,WAClBkC,EAAa9B,KACbiD,EAAY,KACZrB,IACAsB,GAAY,GACZO,EAAS,GACTI,EAAe,GACfF,EAAS,kBKpCE0C,MAJf,WACE,OAAO,cAAC,EAAD,KCETC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.83698385.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerBlue\":\"#478ED5\",\"makerRed\":\"#ED4D41\",\"makerBlack\":\"black\",\"mediaQuery\":\"62rem\",\"displayBox\":\"display_displayBox__1Gt-A\",\"gameOverBox\":\"display_gameOverBox__2MGsf\",\"span\":\"display_span__3TvUF\",\"gameOver\":\"display_gameOver__1wH8y\",\"blink\":\"display_blink__1pnd8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerModern\":\"#f1eee8\",\"mediaQuery\":\"62rem\",\"warp\":\"tetris_warp__1hA5g\",\"container\":\"tetris_container__28C-0\",\"boxContainer\":\"tetris_boxContainer__2McMX\",\"displayBox\":\"tetris_displayBox__QSbHR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mediaQuery\":\"62rem\",\"title\":\"header_title___zdfF\",\"span\":\"header_span__3nZgJ\",\"bop\":\"header_bop__sCAol\",\"bopB\":\"header_bopB__3TMbP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"makerBlue\":\"#478ED5\",\"makerBlack\":\"black\",\"mediaQuery\":\"62rem\",\"btnBox\":\"startButton_btnBox__3PaED\",\"btn\":\"startButton_btn__2bZUi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"playBoard\":\"playBoard_playBoard__iY9BH\"};","import React from \"react\";\nimport styles from \"./header.module.css\";\n\nconst Header = () => (\n  <div className={styles.title}>\n    <span className={styles.span}>\"Tetris</span>\n    <span className={styles.span}>Game\"</span>\n  </div>\n);\n\nexport default Header;\n","import React from \"react\";\nimport styles from \"./display.module.css\";\n\nconst Display = ({ gameOver, text }) => {\n  return (\n    <div className={styles.display}>\n      {gameOver ? (\n        <div className={`${styles.displayBox} ${styles.gameOverBox}`}>\n          <span className={`${styles.span} ${styles.gameOver}`}>{text}</span>\n        </div>\n      ) : (\n        <div className={styles.displayBox}>\n          <span className={styles.span}>{text}</span>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default Display;\n","import styled from \"styled-components\";\n\nexport const StyledMicroBox = styled.div`\n  box-sizing: border-box;\n  width: auto;\n  background-color: ${(props) =>\n    props.type === 0 ? \"none\" : `rgba(${props.color})`};\n  border: ${(props) => (props.type === 0 ? \"0px solid\" : \"2px solid\")};\n  border-bottom-color: rgba(${(props) => props.color}, 0.1);\n  border-right-color: rgba(${(props) => props.color}, 1);\n  border-top-color: rgba(${(props) => props.color}, 1);\n  border-left-color: rgba(${(props) => props.color}, 0.3);\n`;\n","import React from \"react\";\nimport { StyledMicroBox } from \"../styles/StyledMicroBox\";\n\nconst MicroBox = ({ type, color }) => {\n  return <StyledMicroBox type={type} color={color} />;\n};\n\nexport default React.memo(MicroBox);\n","import React from \"react\";\nimport styles from \"./playBoard.module.css\";\nimport MicroBox from \"../microBox/microBox\";\n\nconst PlayBoard = ({ playBoard, color }) => {\n  return (\n    <div className={styles.playBoard}>\n      {playBoard.map((row) =>\n        row.map((micro, x) => (\n          <MicroBox key={x} type={micro[0]} color={color} />\n        ))\n      )}\n    </div>\n  );\n};\n\nexport default PlayBoard;\n","import React from \"react\";\nimport styles from \"./startButton.module.css\";\n\nconst StartButton = ({ callback }) => {\n  return (\n    <section className={styles.btnBox}>\n      <button className={styles.btn} onClick={callback}>\n        GAME START!\n      </button>\n    </section>\n  );\n};\n\nexport default StartButton;\n","export const BOARD_WIDTH = 10;\nexport const BOARD_HEIGHT = 20;\n\nexport const playingBoard = () =>\n  Array.from(Array(BOARD_HEIGHT), () =>\n    new Array(BOARD_WIDTH).fill([0, \"fix\"])\n  );\n\nexport const checkBumped = (player, playBoard, { x: moveX, y: moveY }) => {\n  for (let y = 0; y < player.blockType.length; y += 1) {\n    for (let x = 0; x < player.blockType[y].length; x += 1) {\n      if (player.blockType[y][x] !== 0) {\n        if (\n          !playBoard[y + player.position.y + moveY] ||\n          !playBoard[y + player.position.y + moveY][\n            x + player.position.x + moveX\n          ] ||\n          playBoard[y + player.position.y + moveY][\n            x + player.position.x + moveX\n          ][1] !== \"fix\"\n        ) {\n          return true;\n        }\n      }\n    }\n  }\n};\n","export const BLOCKS = {\n  0: { shape: [[0]], color: \"0, 0, 0\" },\n  block: {\n    shape: [\n      [\"O\", \"O\"],\n      [\"O\", \"O\"],\n    ],\n    color: {\n      0: \"233,142,163\",\n      1: \"60,166,85\",\n      2: \"241,207,40\",\n      3: \"71,142,213\",\n      4: \"237,77,65\",\n      5: \"221,140,50\",\n    },\n  },\n};\n\nexport const randomColorfulBlock = () => {\n  const colorfulBlock = \"012345\";\n  const randomColorful =\n    colorfulBlock[Math.floor(Math.random() * colorfulBlock.length)];\n  return BLOCKS.block.color[randomColorful];\n};\n","import { useEffect, useState } from \"react\";\nimport { playingBoard } from \"../../playingGame\";\n\nexport const usePlayBoard = (player, resetPlayer) => {\n  const [playBoard, setPlayBoard] = useState(playingBoard());\n  const [attack, setAttack] = useState(0);\n\n  useEffect(() => {\n    setAttack(0);\n\n    const attackBomb = (newBoard) =>\n      newBoard.reduce((total, row) => {\n        if (row.findIndex((micro) => micro[0] === 0) === -1) {\n          setAttack((preview) => preview + 1);\n          total.unshift(new Array(newBoard[0].length).fill([0, \"fix\"]));\n          return total;\n        }\n        total.push(row);\n        return total;\n      }, []);\n\n    const boardUpdateStep = (beforeBoard) => {\n      const newBoard = beforeBoard.map((row) =>\n        row.map((micro) => (micro[1] === \"fix\" ? [0, \"fix\"] : micro))\n      );\n\n      player.blockType.forEach((row, y) => {\n        row.forEach((value, x) => {\n          if (value !== 0) {\n            newBoard[y + player.position.y][x + player.position.x] = [\n              value,\n              `${player.bumped ? \"merge\" : \"fix\"}`,\n            ];\n          }\n        });\n      });\n\n      if (player.bumped) {\n        resetPlayer();\n        return attackBomb(newBoard);\n      }\n      return newBoard;\n    };\n\n    setPlayBoard((preview) => boardUpdateStep(preview));\n  }, [\n    player.bumped,\n    player.position.y,\n    player.position.x,\n    player.blockType,\n    resetPlayer,\n  ]);\n\n  return [playBoard, setPlayBoard, attack];\n};\n","import React, { useRef, useState } from \"react\";\nimport styles from \"./tetris.module.css\";\nimport Header from \"../haeder/header\";\nimport Display from \"../display/display\";\nimport PlayBoard from \"../playBoard/playBoard\";\nimport StartButton from \"../startButton/startButton\";\nimport { playingBoard, checkBumped } from \"../../playingGame\";\n\nimport { useInterval } from \"../hooks/useInterval\";\nimport { usePlayer } from \"../hooks/usePlayer\";\nimport { usePlayBoard } from \"../hooks/usePlayBoard\";\nimport { usePlayGame } from \"../hooks/usePlayGame\";\nimport { useResize } from \"../hooks/useResize\";\n\nconst Tetris = () => {\n  const [fallTime, setFallTime] = useState(null);\n  const [gameOver, setGameOver] = useState(false);\n  const [player, playerUpdatePostion, resetPlayer] = usePlayer();\n  const [playBoard, setPlayBoard, attack] = usePlayBoard(player, resetPlayer);\n  const [\n    score,\n    setScore,\n    attackBlock,\n    setAttackBlock,\n    level,\n    setLevel,\n  ] = usePlayGame(attack);\n  const myRef = useRef();\n  const { WIDTH } = useResize(myRef);\n\n  const handlerMovePlayer = (dir) => {\n    if (!checkBumped(player, playBoard, { x: dir, y: 0 })) {\n      playerUpdatePostion({ x: dir, y: 0 });\n    }\n  };\n\n  const onStartGame = () => {\n    setPlayBoard(playingBoard());\n    setFallTime(1000);\n    resetPlayer();\n    setGameOver(false);\n    setScore(0);\n    setAttackBlock(0);\n    setLevel(0);\n  };\n\n  const onFallingBlock = () => {\n    if (attackBlock > (level + 1) * 10) {\n      setLevel((preview) => preview + 1);\n      setFallTime(1000 / (level + 1) + 200);\n    }\n\n    if (!checkBumped(player, playBoard, { x: 0, y: 1 })) {\n      playerUpdatePostion({ x: 0, y: 1, bumped: false });\n    } else {\n      if (player.position.y < 1) {\n        setGameOver(true);\n        setFallTime(null);\n      }\n      playerUpdatePostion({ x: 0, y: 0, bumped: true });\n    }\n  };\n\n  const onKeyUp = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 40) {\n        setFallTime(1000);\n      }\n    }\n  };\n\n  const handlerFalling = () => {\n    setFallTime(null);\n    onFallingBlock();\n  };\n\n  const onKeyboardMove = ({ keyCode }) => {\n    if (!gameOver) {\n      if (keyCode === 37) {\n        handlerMovePlayer(-1);\n      } else if (keyCode === 39) {\n        handlerMovePlayer(1);\n      } else if (keyCode === 40) {\n        handlerFalling();\n      }\n    }\n  };\n\n  const onMouseMove = (event) => {\n    const mousePointer = event.clientX;\n    const currentPoint = WIDTH - mousePointer;\n\n    if (!gameOver) {\n      if (mousePointer < currentPoint) {\n        handlerMovePlayer(-1);\n      } else {\n        handlerMovePlayer(1);\n      }\n    }\n  };\n\n  useInterval(() => {\n    onFallingBlock();\n  }, fallTime);\n\n  return (\n    <section\n      className={styles.warp}\n      role=\"button\"\n      tabIndex=\"0\"\n      onKeyDown={(event) => onKeyboardMove(event)}\n      onKeyUp={onKeyUp}\n      onMouseMove={(event) => onMouseMove(event)}\n      ref={myRef}\n    >\n      <div className={styles.container}>\n        <Header />\n        <div className={styles.boxContainer}>\n          <PlayBoard playBoard={playBoard} color={player.color} />\n\n          <div className={styles.displayBox}>\n            {gameOver ? (\n              <div className={styles.display}>\n                <Display gameOver={gameOver} text=\"GAME OVER\" />\n              </div>\n            ) : (\n              <div className={styles.display}>\n                <Display text={`SCORE : ${score}`} />\n                <Display text={`ATTACK : ${attackBlock}`} />\n                <Display text={`LEVEL : ${level}`} />\n              </div>\n            )}\n            <StartButton callback={onStartGame} />\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport default Tetris;\n","import { useCallback, useState } from \"react\";\nimport { randomColorfulBlock, BLOCKS } from \"../../block\";\nimport { BOARD_WIDTH } from \"../../playingGame\";\n\nexport const usePlayer = () => {\n  const [player, setPlayer] = useState({\n    position: { x: 0, y: 0 },\n    blockType: BLOCKS[0].shape,\n    color: randomColorfulBlock(),\n    bumped: false,\n  });\n\n  const playerUpdatePostion = ({ x, y, bumped }) => {\n    setPlayer((preview) => ({\n      ...preview,\n      position: {\n        x: (preview.position.x = preview.position.x + x),\n        y: (preview.position.y = preview.position.y + y),\n      },\n      bumped,\n    }));\n  };\n\n  const resetPlayer = useCallback(() => {\n    setPlayer({\n      position: { x: BOARD_WIDTH / 2 - 1, y: 0 },\n      blockType: BLOCKS.block.shape,\n      color: randomColorfulBlock(),\n      bumped: false,\n    });\n  }, []);\n\n  return [player, playerUpdatePostion, resetPlayer];\n};\n","import { useCallback, useEffect, useState } from \"react\";\n\nexport const usePlayGame = (attack) => {\n  const [score, setScore] = useState(0);\n  const [level, setLevel] = useState(0);\n  const [attackBlock, setAttackBlock] = useState(0);\n\n  const scorePoint = [10, 20, 30, 40, 50, 60, 70, 80, 90, 100];\n\n  const scoreResult = useCallback(() => {\n    if (attack > 0) {\n      setScore((preview) => preview + scorePoint[attack - 1] * (level + 1));\n      setAttackBlock((preview) => preview + attack);\n    }\n  }, [level, scorePoint, attack]);\n\n  useEffect(() => {\n    scoreResult();\n  }, [scoreResult, attack, score]);\n\n  return [score, setScore, attackBlock, setAttackBlock, level, setLevel];\n};\n","import { useEffect, useState } from \"react\";\n\nexport const useResize = (myRef) => {\n  const getDimensions = () => ({\n    WIDTH: myRef.current.offsetWidth,\n  });\n\n  const [dimensions, setDimensions] = useState({ WIDTH: 0 });\n  useEffect(() => {\n    const handleResize = () => {\n      setDimensions(getDimensions());\n    };\n\n    if (myRef.current) {\n      setDimensions(getDimensions());\n    }\n\n    window.addEventListener(\"resize\", handleResize);\n\n    return () => {\n      window.removeEventListener(\"resize\", handleResize);\n    };\n  }, [myRef]);\n\n  return dimensions;\n};\n","import { useEffect, useRef } from \"react\";\n\n// * useInterval 레퍼런스 : https://overreacted.io/making-setinterval-declarative-with-react-hooks/\n\nexport function useInterval(callback, delay) {\n  const savedCallback = useRef();\n\n  useEffect(() => {\n    savedCallback.current = callback;\n  }, [callback]);\n\n  useEffect(() => {\n    function tick() {\n      savedCallback.current();\n    }\n    if (delay !== null) {\n      const id = setInterval(tick, delay);\n      return () => {\n        clearInterval(id);\n      };\n    }\n  }, [delay]);\n}\n","import \"./app.css\";\nimport Tetris from \"./components/tetris/tetris\";\n\nfunction App() {\n  return <Tetris />;\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport \"./common/reset.css\";\nimport App from \"./app.jsx\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}